% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main_functions.R
\name{cluster_complete_analysis}
\alias{cluster_complete_analysis}
\title{Complete Sequence Analysis and Clustering}
\usage{
cluster_complete_analysis(
  data,
  k_range = 2:5,
  distance_methods = c("euclidean", "lcs", "transition"),
  clustering_methods = c("pam", "ward.D2"),
  n_cores = NULL,
  min_cluster_size = 1,
  balance_threshold = 0.1,
  na_action = c("ignore", "remove", "error"),
  ...
)
}
\arguments{
\item{data}{A data frame or matrix where rows are sequences and columns are time points}

\item{k_range}{Integer vector specifying the range of k values to test (default: 2:5)}

\item{distance_methods}{Character vector of distance methods to test (default: c("euclidean", "lcs", "transition"))}

\item{clustering_methods}{Character vector of clustering methods to test (default: c("pam", "ward.D2"))}

\item{n_cores}{Integer. Number of cores for parallel processing. If NULL (default),
uses sequential processing. If specified, automatically enables parallel processing.}

\item{min_cluster_size}{Integer. Minimum acceptable cluster size for filtering (default: 1)}

\item{balance_threshold}{Numeric. Minimum balance ratio for cluster quality assessment (default: 0.1)}

\item{na_action}{Character. How to handle NAs: "ignore" (default), "remove", "error"}

\item{...}{Additional arguments passed to \code{\link{compute_distance_matrix}}}
}
\value{
A list containing:
\item{all_results}{Nested list of all results organized by distance method and clustering method}
\item{summary}{Dataframe summarizing all combinations with key metrics}
}
\description{
Performs comprehensive analysis by testing multiple distance and clustering methods.
Returns all results without automatic selection to allow manual inspection.
Supports parallel processing for faster computation.
}
\examples{
\dontrun{
# Complete analysis
data <- data.frame(
  T1 = c("A", "B", "A", "C", "A", "B", "C", "A"),
  T2 = c("B", "A", "B", "A", "C", "A", "A", "C"),
  T3 = c("C", "C", "A", "B", "B", "C", "B", "B")
)

# Sequential analysis
analysis <- cluster_complete_analysis(data)

# Parallel analysis (faster for multiple distance methods)
analysis_parallel <- cluster_complete_analysis(data, n_cores = 4)
print(analysis$summary)
}

}
